***************************************************
*
* Copyright 2014 Alexandre Skyrme, Noemi Rodriguez, Roberto Ierusalimschy
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
* 
*****************************************************
*
* [CHANGELOG]                                          
*
****************************************************

[v1.0-2]

* Added macros for compatibility with Lua 5.2 and 5.3.

* Removed global name registration in parent when loading luaproc.

[v1.0-1]

* Major code revision by Pablo Musa:
  - Internal data structures are now stored in Lua tables, removing the need
    for memory management in C;
  - Messages can contain strings, numbers, booleans and nil;
  - Improved error handling in Lua processes;
  - Functions luaproc.createworker and luaproc.destroyworker replaced by 
    function luaproc.setnumworkers;
  - Added function luaproc.getnumworkers;
  - Code clean-up.

* Added support to send and receive messages to/from main Lua script, which
  also resulted in a unified API for both the main (parent) Lua script and the
  child Lua processes (created with luaproc.newproc).

* Removed function luaproc.exit.

* Added function luaproc.wait, which waits until all Lua processes have
  finished executing and can be used for synchronization. Unlike luaproc.exit,
  which had to be the last function to be called, luaproc.wait can be called at
  any point in a script. It is always implicitly called when the main Lua
  script finishes executing.

* Fixed a race condition that was trigged by the main Lua script exiting while
  luaproc workers were active. When Lua unloads dynamic libraries with 
  dlclose() while it is exiting, pthreads is unloaded while workers are still 
  active, causing a segmentation fault. Workers (pthreads) are now joined, via
  a finalizer, when luaproc is unloaded.

* Fixed a race condition when creating new Lua processes with recycling.

* Fixed include guard conflict in sched.h (now lpsched.h).

* Included release in LuaRocks.

[v1.0b1]

* First public beta release.

